events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    client_max_body_size 20M;

	# Rate limiting at the proxy level
    limit_req_zone $binary_remote_addr zone=api_limit:10m rate=100r/m;

	# WebSocket support
	map $http_upgrade $connection_upgrade {
		default upgrade;
		'' close;
	}

    upstream frontend {
        server frontend:3000;
    }

    upstream backend {
        server backend:8080;
    }

    server {
        listen 80;
        server_name aouichou.me www.aouichou.me;

        location / {
            return 301 https://$host$request_uri;
        }

        location /healthz {
            return 200;
        }
    }

	server {
        listen 80;
        server_name api.aouichou.me;

        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
        }

        location / {
            return 301 https://$host$request_uri;
        }
    }

    server {
        listen 443 ssl;
        server_name aouichou.me www.aouichou.me api.aouichou.me;

        ssl_certificate /etc/letsencrypt/live/aouichou.me/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/aouichou.me/privkey.pem;

        location /healthz {
            return 200;
        }

        location / {
            proxy_pass http://frontend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

    	location /media/ {
			alias /app/media/;
			autoindex off;
			expires 30d;
			add_header Cache-Control "public";
			
			# Handle CORS for media files
			if ($request_method = 'OPTIONS') {
				add_header 'Access-Control-Allow-Origin' '*';
				add_header 'Access-Control-Allow-Methods' 'GET, OPTIONS';
				add_header 'Access-Control-Max-Age' 1728000;
				add_header 'Content-Type' 'text/plain; charset=utf-8';
				add_header 'Content-Length' 0;
				return 204;
			}
		}

        location /api/ {
			limit_req zone=api_limit burst=20;
            proxy_pass http://backend:8080/api/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

			# Security headers
            add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
            add_header Content-Security-Policy "default-src 'none'; frame-ancestors 'none'; form-action 'self';";
			add_header 'Access-Control-Allow-Origin' $http_origin always;
			add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
			add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;
			add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;
			add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type';

			# Handle preflight requests
			if ($request_method = 'OPTIONS') {
				add_header 'Access-Control-Max-Age' 1728000;
				add_header 'Content-Type' 'text/plain; charset=utf-8';
				add_header 'Content-Length' 0;
				return 204;
			}
			
			# Disable redirects
			proxy_redirect off;
        }

		# WebSocket endpoint
		location ~ ^/ws/ {
			proxy_pass http://backend:8080;
			proxy_http_version 1.1;
			proxy_set_header Upgrade $http_upgrade;
			proxy_set_header Connection $connection_upgrade;
			proxy_set_header Host $host;
		}
    }
}