name: Heroku + Render Deploy
on: [push]

jobs:
  # First job: detect which parts have changed
  check-changes:
    runs-on: ubuntu-latest
    outputs:
      backend: ${{ steps.filter.outputs.backend || steps.check-commit-msg.outputs.force_deploy == 'true' }}
      terminal: ${{ steps.filter.outputs.terminal || steps.check-commit-msg.outputs.force_deploy == 'true' }}
      frontend: ${{ steps.filter.outputs.frontend || steps.check-commit-msg.outputs.force_deploy == 'true' }}
      shared: ${{ steps.filter.outputs.shared }}
      force_deploy: ${{ steps.check-commit-msg.outputs.force_deploy }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      # Check if commit message contains force deploy flag
      - name: Check commit message
        id: check-commit-msg
        run: |
          COMMIT_MSG=$(git log -1 --pretty=%B)
          if echo "$COMMIT_MSG" | grep -q "\[deploy-all\]" || echo "$COMMIT_MSG" | grep -q "\[force-deploy\]"; then
            echo "force_deploy=true" >> $GITHUB_OUTPUT
            echo "Force deployment detected from commit message"
          else
            echo "force_deploy=false" >> $GITHUB_OUTPUT
          fi
      
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            backend:
              - 'portfolio_api/**'
              - 'docker-compose.yml'
              - 'nginx.conf'
            terminal:
              - 'portfolio-terminal/**'  
            frontend:
              - 'portfolio_ui/**'
            shared:
              - 'docker-compose.yml'
              - 'nginx.conf'

      - name: Report changes
        run: |
          echo "Backend changes: ${{ steps.filter.outputs.backend }}"
          echo "Terminal changes: ${{ steps.filter.outputs.terminal }}"
          echo "Frontend changes: ${{ steps.filter.outputs.frontend }}"
          echo "Shared config changes: ${{ steps.filter.outputs.shared }}"
          echo "Force deploy: ${{ steps.check-commit-msg.outputs.force_deploy }}"

  # Backend deployment job with condition
  deploy-backend:
    needs: [check-changes]
    if: needs.check-changes.outputs.backend == 'true' || needs.check-changes.outputs.shared == 'true' || needs.check-changes.outputs.force_deploy == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Deploy reason
        run: |
          if [[ "${{ needs.check-changes.outputs.force_deploy }}" == "true" ]]; then
            echo "ðŸš€ Deploying backend because force deploy was requested in commit message"
          else
            echo "ðŸš€ Deploying backend because backend files changed"
          fi

      - name: Update Render Environment Variables
        run: |
          curl -X PATCH \
            -H "Authorization: Bearer ${{ secrets.RENDER_API_KEY }}" \
            -H "Content-Type: application/json" \
            -d '{
              "envVars": [
              {"key": "SMTP_USER", "value": "${{ secrets.SMTP_USER }}"},
              {"key": "SMTP_PASSWORD", "value": "${{ secrets.SMTP_PASSWORD }}"}
            ]
          }' \
          https://api.render.com/v1/services/${{ secrets.RENDER_SERVICE_ID }}/env-vars
              
      - name: Render Deploy Action
        uses: johnbeynon/render-deploy-action@v0.0.8
        with:
          service-id: ${{ secrets.RENDER_SERVICE_ID }}
          api-key: ${{ secrets.RENDER_API_KEY }}
          
      - name: Run Migrations and Import Data
        run: |
          # First deployment to create service
          curl -X POST -H "Authorization: Bearer ${{ secrets.RENDER_API_KEY }}" \
               https://api.render.com/v1/services/${{ secrets.RENDER_SERVICE_ID }}/deploy
          
          # Wait for service to be ready
          sleep 120
          
          # Run migrations
          curl -X POST -H "Authorization: Bearer ${{ secrets.RENDER_API_KEY }}" \
               -H "Content-Type: application/json" \
               -d '{"clearCache": "do_not_clear"}' \
               https://api.render.com/v1/services/${{ secrets.RENDER_SERVICE_ID }}/deploy

  # Frontend deployment job with condition
  deploy-frontend:
    needs: [check-changes]
    if: needs.check-changes.outputs.frontend == 'true' || needs.check-changes.outputs.force_deploy == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Deploy reason
        run: |
          if [[ "${{ needs.check-changes.outputs.force_deploy }}" == "true" ]]; then
            echo "ðŸš€ Deploying frontend because force deploy was requested in commit message"
          else
            echo "ðŸš€ Deploying frontend because frontend files changed"
          fi
      
      - name: Install Heroku CLI
        run: curl https://cli-assets.heroku.com/install.sh | sh
      
      # Set Heroku stack to container
      - name: Set Heroku stack to container
        run: heroku stack:set container -a portfolio-frontend
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
      
      - name: Build, Push and Release a Docker container to Heroku
        uses: gonuit/heroku-docker-deploy@v1.3.3
        with:
          heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
          heroku_app_name: "portfolio-frontend"
          email: "a.ouichou@student.42.fr" 
          dockerfile_directory: "./portfolio_ui/"

  # Terminal service deployment job
  deploy-terminal:
    needs: [check-changes]
    if: needs.check-changes.outputs.terminal == 'true' || needs.check-changes.outputs.shared == 'true' || needs.check-changes.outputs.force_deploy == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Deploy reason
        run: |
          if [[ "${{ needs.check-changes.outputs.force_deploy }}" == "true" ]]; then
            echo "ðŸš€ Deploying terminal service because force deploy was requested"
          elif [[ "${{ needs.check-changes.outputs.shared }}" == "true" ]]; then
            echo "ðŸš€ Deploying terminal service because shared configs changed"
          else
            echo "ðŸš€ Deploying terminal service because terminal files changed"
          fi

      - name: Render Deploy Action for Terminal Service
        uses: johnbeynon/render-deploy-action@v0.0.8
        with:
          service-id: ${{ secrets.RENDER_TERMINAL_SERVICE_ID }}
          api-key: ${{ secrets.RENDER_API_KEY }}