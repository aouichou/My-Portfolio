name: Azure Deployment

on: [push]

jobs:
  build-push:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Check for Frontend Changes
        id: frontend-changes
        uses: dorny/paths-filter@v2
        with:
          filters: |
            frontend:
              - 'portfolio_ui/**'

      - name: Check for Backend Changes
        id: backend-changes
        uses: dorny/paths-filter@v2
        with:
          filters: |
            backend:
              - 'portfolio_api/**'

      - name: Log in to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Login to Azure Container Registry
        if: steps.frontend-changes.outputs.frontend == 'true' || steps.backend-changes.outputs.backend == 'true'
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.ACR_NAME }}.azurecr.io
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      - name: Build and push frontend
        if: steps.frontend-changes.outputs.frontend == 'true'
        run: |
          docker build -t ${{ secrets.ACR_NAME }}.azurecr.io/frontend:latest ./portfolio_ui
          docker push ${{ secrets.ACR_NAME }}.azurecr.io/frontend:latest

      - name: Build and push backend
        if: steps.backend-changes.outputs.backend == 'true'
        run: |
          docker build -t ${{ secrets.ACR_NAME }}.azurecr.io/backend:latest ./portfolio_api
          docker push ${{ secrets.ACR_NAME }}.azurecr.io/backend:latest

  deploy:
    needs: build-push
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - uses: azure/aks-set-context@v2
        with:
          resource-group: ${{ secrets.RESOURCE_GROUP }}
          cluster-name: ${{ secrets.AKS_CLUSTER_NAME }}

      - name: Setup Nginx Ingress
        if: contains(github.event.commits[0].message, '[ingress]')
        run: |
          helm repo add ingress-nginx https://kubernetes.github.io/ingress-nginx
          helm repo update
          helm upgrade ingress-nginx ingress-nginx/ingress-nginx \
            --namespace ingress-nginx \
            --set controller.replicaCount=2 \
            --set controller.nodeSelector."kubernetes\.io/os"=linux \
            --set defaultBackend.nodeSelector."kubernetes\.io/os"=linux

      - name: Deploy to AKS
        run: |
          echo "Applying Kubernetes manifests..."
          kubectl apply -f kubernetes/pvc.yaml
          kubectl apply -f kubernetes/frontend-config.yaml
          kubectl apply -f kubernetes/backend-config.yaml
          kubectl apply -f kubernetes/service.yaml
          kubectl apply -f kubernetes/ingress.yaml

          if [[ "${{ needs.build-push.outputs.frontend-changes }}" == "true" ]]; then
            echo "Restarting frontend deployment..."
            kubectl apply -f kubernetes/frontend-deployment.yaml
            kubectl rollout restart deployment/frontend
          fi

          if [[ "${{ needs.build-push.outputs.backend-changes }}" == "true" ]]; then
            echo "Restarting backend deployment..."
            kubectl apply -f kubernetes/backend-deployment.yaml
            kubectl rollout restart deployment/backend
          fi

          echo "Delaying for 30 seconds to allow PVC binding and init container completion..."
          sleep 30